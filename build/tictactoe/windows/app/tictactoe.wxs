<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs">
    <Package
        UpgradeCode="0a815563-9c4c-5d8b-bef3-31c617df32ae"
        Name="tictactoe"
        Version="0.0.1"
        Manufacturer="Rafael Lugassy"
        Language="1033"
        Scope="perUserOrMachine">
        <!-- See scope comments below -->

        <Media Id="1" Cabinet="product.cab" EmbedCab="yes" />

        <Icon Id="ProductIcon" SourceFile="icon.ico" />

        <!-- Add/Remove Programs settings -->
        <Property Id="ARPPRODUCTICON" Value="ProductIcon" />
        <Property Id="ARPURLINFOABOUT" Value="https://tictactoe.rafaellugassy.com/tictactoe" />
        <Property Id="ARPCONTACT" Value="rafaellugassy@gmail.com" />
        <Property Id="ARPNOREPAIR" Value="1" />
        <Property Id="ARPNOMODIFY" Value="1" />

        <!-- If we ever add the InstallDirDlg, it will use this property to control the
        target directory. The value must be upper case to make it a public property
        that will be passed to the execution phase. And since WiX will create a default
        INSTALLFOLDER directory under certain circumstances, let's override that with
        our own definition to avoid confusion. -->
        <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />

        <!-- This is either the per-user or the per-machine Program Files folder,
        depending on the values of the ALLUSERS and MSIINSTALLPERUSER properties. -->
        <StandardDirectory Id="ProgramFiles64Folder">
            <Directory Name="Rafael Lugassy">
            <Directory Id="INSTALLFOLDER" Name="tictactoe" />
            </Directory>
        </StandardDirectory>

        <ComponentGroup Id="tictactoe_COMPONENTS">
            <!-- "\\?\" enables long paths (https://github.com/wixtoolset/issues/issues/9115). -->
            <Files
                Directory="INSTALLFOLDER"
                Include="\\?\C:\Users\Rafael\Desktop\tictactoe\tictactoe\build\tictactoe\windows\app\src\**" />
        </ComponentGroup>

        <StandardDirectory Id="ProgramMenuFolder">
            <Directory Id="ProgramMenuSubfolder" Name="tictactoe">
                <Component Id="ApplicationShortcuts">
                    <Shortcut
                        Id="ApplicationShortcut1"
                        Name="tictactoe"
                        Icon="ProductIcon"
                        Description="tictactoe online"
                        Target="[INSTALLFOLDER]tictactoe.exe" />
                    <RegistryValue
                        Root="HKMU"
                        Key="Software\Rafael Lugassy\tictactoe"
                        Name="installed"
                        Type="integer"
                        Value="1"
                        KeyPath="yes" />
                    <RemoveFolder Id="ProgramMenuSubfolder" On="uninstall" />
                </Component>
            </Directory>
        </StandardDirectory>

        

        <Feature Id="DefaultFeature">
            <ComponentGroupRef Id="tictactoe_COMPONENTS" />
            <ComponentRef Id="ApplicationShortcuts" />
        </Feature>

        

        <!-- UI features are documented at https://docs.firegiant.com/wix3/wixui/, and
        implemented in the WiX source code under src/ext/UI/wixlib.

        We implement our own UI flow by linking together individual dialogs. There are
        some pre-defined UI flows such as WixUI_Advanced, but they don't allow much
        customization, and they have some bugs, e.g.
        https://github.com/wixtoolset/issues/issues/5908. -->

        <!-- Enable the radio buttons in InstallScopeDlg, and set the default value -->
        <WixVariable Id="WixUISupportPerUser" Value="1" />
        <WixVariable Id="WixUISupportPerMachine" Value="1" />
        <Property Id="WixAppFolder" Value="WixPerUserFolder" />

        <UI>
            <!-- Include all TextStyles from WixUI_Advanced -->
            <TextStyle
                Id="WixUI_Font_Normal"
                FaceName="!(loc.Advanced_Font_FaceName)"
                Size="!(loc.Advanced_Font_Normal_Size)" />
            <TextStyle
                Id="WixUI_Font_Bigger"
                FaceName="!(loc.Advanced_Font_FaceName)"
                Size="!(loc.Advanced_Font_Bigger_Size)" />
            <TextStyle
                Id="WixUI_Font_Title"
                FaceName="!(loc.Advanced_Font_FaceName)"
                Size="!(loc.Advanced_Font_Title_Size)"
                Bold="yes" />
            <TextStyle
                Id="WixUI_Font_Emphasized"
                FaceName="!(loc.Advanced_Font_FaceName)"
                Size="!(loc.Advanced_Font_Emphasized_Size)"
                Bold="yes" />
            <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />

            <!-- Include all DialogRefs from WixUI_Advanced. These include:

            * Child dialogs launched from top-level dialogs.
            * Dialogs implicitly shown at particular points in the install, determined
              either by their IDs, or the InstallUISequence in their source code. -->
            <DialogRef Id="BrowseDlg" />
            <DialogRef Id="DiskCostDlg" />
            <DialogRef Id="ErrorDlg" />
            <DialogRef Id="FatalError" />
            <DialogRef Id="FilesInUse" />
            <DialogRef Id="MsiRMFilesInUse" />
            <DialogRef Id="PrepareDlg" />
            <DialogRef Id="ProgressDlg" />
            <DialogRef Id="ResumeDlg" />
            <DialogRef Id="UserExit" />
            <DialogRef Id="WelcomeDlg" />

            <!-- Scope handling has to work within the following constraints, some of
            which are documented, and some not
            (https://learn.microsoft.com/en-us/windows/win32/msi/single-package-authoring):

            * If ALLUSERS="" or 1, then:
              * Whether elevation is required depends on the "Word Count Summary".
              * Some folders are affected by the choice of "" or 1, but ProgramFiles
                folders will always point at the per-machine location.
              * MSIINSTALLPERUSER has no effect during startup.

            * If ALLUSERS=2 and MSIINSTALLPERUSER=1, then:
              * Elevation will not be required.
              * ProgramFiles folders will point at the per-user location.
              * If either phase is started with these values, then ALLUSERS will be
                changed to "" before running any actions. However, if the UI phase ends
                and both properties still have the same values (ALLUSERS="",
                MSIINSTALLPERUSER=1), then it will reset ALLUSERS=2 before invoking the
                execution phase.

            * Properties that depend on a ProgramFiles folder are immediately
              re-evaluated in the following circumstances. This will be important for
              the InstallDirDlg, if we ever add it:
              * Setting ALLUSERS=1 sets the per-machine location.
              * Setting ALLUSERS="", MSIINSTALLPERUSER=1, in that order, sets the
                per-user location.

            * Most standard actions, such as FindRelatedProducts, interpret ALLUSERS=""
              as per-user scope, and any other value as per-machine scope.

            Based on this, our UI phase sets the properties to one of two states:
              * Per-user: ALLUSERS="", MSIINSTALLPERUSER=1
              * Per machine: ALLUSERS=1, MSIINSTALLPERUSER="" -->

            
            <!-- Let the user choose the scope. -->
            <Publish
                Dialog="WelcomeDlg"
                Control="Next"
                Event="NewDialog"
                Value="InstallScopeDlg" />

            <Publish
                Dialog="InstallScopeDlg"
                Control="Back"
                Event="NewDialog"
                Value="WelcomeDlg" />

            <!-- Per-user scope. Although this is the default, we still need code to set
            it, because if we add more dialogs it will become possible to go back and
            change the setting. -->
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="1"
                Condition='WixAppFolder = "WixPerUserFolder"'
                Property="ALLUSERS"
                Value="{}" />
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="2"
                Condition='WixAppFolder = "WixPerUserFolder"'
                Property="MSIINSTALLPERUSER"
                Value="1" />
            

            <!-- Per-machine scope -->
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="11"
                Condition='WixAppFolder = "WixPerMachineFolder"'
                Property="ALLUSERS"
                Value="1" />
            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="12"
                Condition='WixAppFolder = "WixPerMachineFolder"'
                Property="MSIINSTALLPERUSER"
                Value="{}" />
            

            <Publish
                Dialog="InstallScopeDlg"
                Control="Next"
                Order="99"
                Event="EndDialog"
                Value="Return" />

            

            <!-- Move FindRelatedProducts after the configuration dialogs to ensure it
            searches the configured scope. This comes after the LaunchConditions action,
            so downgrades will no longer be blocked in the UI phase, but that's OK
            because LaunchConditions will run again in the execution phase. -->
            <InstallUISequence>
                <FindRelatedProducts After="ProgressDlg" />
            </InstallUISequence>

            <Publish
                Dialog="ExitDialog"
                Control="Finish"
                Event="EndDialog"
                Value="Return"
                Order="999" />
        </UI>

        <!-- Include necessary strings (https://stackoverflow.com/questions/44161526) -->
        <UIRef Id="WixUI_ErrorProgressText" />
        <UIRef Id="WixUI_Common" />
    </Package>
</Wix>
